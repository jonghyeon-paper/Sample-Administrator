<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
	
	<!-- 
	create by jonghyeon
	create date : 2017.08.03.
	
	spring scheduler 설정 파일입니다.
	아래는 스케줄러를 스캔하여 등록하는 설정입니다.
	spring profile 설정을  통해서 spring.profiles.active 값이 operating일 경우만 해당 설정이 적용됩니다.
	(if 문으로 분기처리했다고 생각할 수 있습니다.)
	
	profile처리한 이유는 was이중화로 두 곳에 소스가 배포됩니다.('1번 was', '2번 was'로 표기하겠습니다.)
	스케줄은 한 곳에서만 실행되어야 합니다.
	예를들어 1번 was에서 스케줄러를 동작시키려면 was 구동 시 'spring.profiles.active=operating' 이렇게 파라미터 설정을 하면 됩니다.
	2번 was에서는 스케줄러를 동작시키지 않을 것이므로 아무 설정도 필요 없습니다.
	
	로컬에서 스케줄러를 동작시키려면 톰캣실행 시 arguments에 '-Dspring.profiles.active=operating'를 추가하면 됩니다.
	
	스케줄러 작성예는 com.skplanet.iba.scheduler 패키지를 참고하시기 바랍니다.
	어노테이션으로 스케줄러 메소드를 표기하시면 됩니다.
	예시는 딜레이값을 설정하여 반복 동작하도록 설정했습니다.
	cron표기도 설정이 가능합니다.
	(자세한 사용방법은 레퍼런스 문서를 참고하시기 바랍니다.)
	 -->
	<beans profile="operating">
		<task:annotation-driven/>
	</beans>
	
</beans>